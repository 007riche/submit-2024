	public OfferRoomCard() {
//		JPanel roomCard = new JPanel();
			selected=false;

			// Load image
			 BufferedImage myPictureBuffer = null;
//		        try {
////		            myPicture = ImageIO.read(new File("/home/richard/hotels.jpg"));
//		        } catch (IOException e) {
//		            throw new RuntimeException(e);
//		        }

		        try {
					URL roomImgUrl = new URL("https://cache.marriott.com/marriottassets/marriott/VIEIL/vieil-facade-9816-hor-feat.jpg");
					myPictureBuffer = ImageIO.read(roomImgUrl);
					if(myPictureBuffer == null) {
						myPictureBuffer = ImageIO.read(new File("/home/richard/hotels.jpg"));
					}
				} catch (IOException e) {
					e.printStackTrace();
				}


			setLayout(null);
			setPreferredSize(new Dimension(200, 250));
			setBorder(new LineBorder(new Color(0, 0, 0), 2, true));

			JPanel roomImgPanel = new JPanel();
			roomImgPanel.setLayout(null);
			roomImgPanel.setBounds(3, 3, 194, 147);
			add(roomImgPanel);

			JButton roomMaximizeButton = new JButton(new ImageIcon(myPictureBuffer));  // "C:\\Users\\richard\\my-eclipse-workspace\\Agence\\src\\resources\\img\\room.jpg"
			roomMaximizeButton.setBounds(0, 0, 194, 147);
			roomImgPanel.add(roomMaximizeButton);

			JPanel roomFromPanel = new JPanel();
			roomFromPanel.setLayout(null);
			roomFromPanel.setBounds(3, 150, 194, 35);
			add(roomFromPanel);

			JTextPane roomFromTextPane = new JTextPane();
			roomFromTextPane.setText("Disponible à partir du: 11/06/2022");
			roomFromTextPane.setEditable(false);
			roomFromTextPane.setBounds(0, 0, 194, 35);
			roomFromPanel.add(roomFromTextPane);

			JPanel roomToPanel = new JPanel();
			roomToPanel.setLayout(null);
			roomToPanel.setBounds(3, 180, 194, 30);
			add(roomToPanel);

			JTextPane roomToTextPane = new JTextPane();
			roomToTextPane.setText("Jusqu'au: 11/06/2022");
			roomToTextPane.setEditable(false);
			roomToTextPane.setBounds(0, 0, 194, 30);
			roomToPanel.add(roomToTextPane);

			JPanel roomPricePanel = new JPanel();
			roomPricePanel.setLayout(null);
			roomPricePanel.setBounds(3, 200, 194, 30);
			add(roomPricePanel);

			JTextPane roomPriceTextPane = new JTextPane();
			roomPriceTextPane.setText("Prix: 200$ ");
			roomPriceTextPane.setEditable(false);
			roomPriceTextPane.setBounds(0, 0, 194, 30);
			roomPricePanel.add(roomPriceTextPane);

			JPanel bookOfferButtonPanel = new JPanel();
			bookOfferButtonPanel.setLayout(null);
			bookOfferButtonPanel.setForeground(SystemColor.menu);
			bookOfferButtonPanel.setBackground(new Color(26, 95, 180));
			bookOfferButtonPanel.setBounds(3, 225, 194, 22);
			add(bookOfferButtonPanel);


			HashMap<Boolean, String> selectionOptionText=new HashMap<Boolean, String>();
			selectionOptionText.put(false, "Sélectionner");
			selectionOptionText.put(true, "Désélectionner");

			HashMap<Boolean, Color> selectionOptionBackgroundColor=new HashMap<Boolean, Color>();
			selectionOptionBackgroundColor.put(false, new Color(6,57,112));
			selectionOptionBackgroundColor.put(true, new Color(238,238,228));

			HashMap<Boolean, Color> selectionOptionForegroundColor=new HashMap<Boolean, Color>();
			selectionOptionForegroundColor.put(false, new Color(238,238,228));
			selectionOptionForegroundColor.put(true, new Color(16, 16, 16));


			JButton bookOfferButton = new JButton(selectionOptionText.get(selected));
			bookOfferButton.setForeground(SystemColor.menu);
			bookOfferButton.setBackground(selectionOptionBackgroundColor.get(selected));
			bookOfferButton.setForeground(selectionOptionForegroundColor.get(selected));
			bookOfferButton.setBounds(0, 0, 194, 23);
			bookOfferButton.addActionListener(new ActionListener() {

				@Override
				public void actionPerformed(ActionEvent e) {
					selected=!selected;
					bookOfferButton.setText(selectionOptionText.get(selected));
					bookOfferButton.setBackground(selectionOptionBackgroundColor.get(selected));
					bookOfferButton.setForeground(selectionOptionForegroundColor.get(selected));
					System.out.println();
					bookOfferButton.repaint();
				}
			});
			bookOfferButtonPanel.add(bookOfferButton);
	}


//		this.roomImgUrlString = roomImgUrlString;
//		this.fromDate = fromDate;
//		this.toDate = toDate;
//		this.prcie = prcie;
//		this.priceMin = priceMin;
//		this.roombeds = roombeds;


//		        try {
////		            myPicture = ImageIO.read(new File("/home/richard/hotels.jpg"));
//		        } catch (IOException e) {
//		            throw new RuntimeException(e);
//		        }

//			if(myPictureBuffer == null) {
//				myPictureBuffer = ImageIO.read(file);
//			}

//			File file = new File(String.valueOf(roomImgUrl));

		// "C:\\Users\\richard\\my-eclipse-workspace\\Agence\\src\\resources\\img\\room.jpg"

			private String roomImgUrlString;
        	private Date fromDate;
        	private Date toDate;
        	private double prcie;
        	private double priceMin;
        	private int roombeds;